[Config DistanceVector]
fingerprint = "3dfe-550b"
**.applicationEntity.aeType 							= "AEPing"
**.iae.aeName 											= "Ping"

# RMT Forwarding policies
**.VM*.TenantIPC.relayAndMux.ForwardingPolicyName = "SimpleTable"
**.SRV*.TenantIPC.relayAndMux.ForwardingPolicyName = "SimpleTable"
**.SRV*.DCIPC.relayAndMux.ForwardingPolicyName = "SimpleTable"
**.TOR*.DCIPC.relayAndMux.ForwardingPolicyName = "SimpleTable"
**.AS*.DCIPC.relayAndMux.ForwardingPolicyName = "SimpleTable"
**.CR*.TenantIPC.relayAndMux.ForwardingPolicyName = "SimpleTable"
**.CR*.DCIPC.relayAndMux.ForwardingPolicyName = "SimpleTable"

# forwarding generator policies
**.VM*.TenantIPC.resourceAllocator.pdufgPolicyName = "SimpleGenerator"
**.SRV*.TenantIPC.resourceAllocator.pdufgPolicyName = "SimpleGenerator"
**.SRV*.DCIPC.resourceAllocator.pdufgPolicyName = "SimpleGenerator"
**.TOR*.DCIPC.resourceAllocator.pdufgPolicyName = "SimpleGenerator"
**.AS*.DCIPC.resourceAllocator.pdufgPolicyName = "SimpleGenerator"
**.CR*.TenantIPC.resourceAllocator.pdufgPolicyName = "SimpleGenerator"
**.CR*.DCIPC.resourceAllocator.pdufgPolicyName = "SimpleGenerator"

# Routing policies
**.VM*.TenantIPC.routingPolicyName = "SimpleDV"
**.SRV*.TenantIPC.routingPolicyName = "SimpleDV"
**.SRV*.DCIPC.routingPolicyName = "SimpleDV"
**.TOR*.DCIPC.routingPolicyName = "SimpleDV"
**.AS*.DCIPC.routingPolicyName = "SimpleDV"
**.CR*.TenantIPC.routingPolicyName = "SimpleDV"
**.CR*.DCIPC.routingPolicyName = "SimpleDV"

**.VM7.AP.applicationEntity.iae.dstApName				= "App0VM8"
**.VM7.AP.applicationEntity.iae.dstAeName 				= "Ping"
**.VM7.AP.applicationEntity.iae.startAt 				= 500s
**.VM7.AP.applicationEntity.iae.pingAt 					= 501s
**.VM7.AP.applicationEntity.iae.rate 					= 5
**.VM7.AP.applicationEntity.iae.stopAt 					= 1000s

[General]
sim-time-limit = 5min
seed-set = ${runnumber}
network = DC

**.CR0.TenantIPC.difName = "TenantDIF"
**.CR0.TenantIPC.ipcAddress = "0"
**.CR0.DCIPC.difName = "DCDIF"
**.CR0.DCIPC.ipcAddress = "0"
**.CR0.ShimIPC[0].difName = "Shim0To1"
**.CR0.ShimIPC[0].ipcAddress = "0"
**.AS1.ShimIPC[0].difName = "Shim0To1"
**.AS1.ShimIPC[0].ipcAddress = "1"

**.AS1.DCIPC.difName = "DCDIF"
**.AS1.DCIPC.ipcAddress = "1"
**.AS1.ShimIPC[1].difName = "Shim1To2"
**.AS1.ShimIPC[1].ipcAddress = "1"
**.AS2.ShimIPC[0].difName = "Shim1To2"
**.AS2.ShimIPC[0].ipcAddress = "2"
**.AS1.ShimIPC[2].difName = "Shim1To3"
**.AS1.ShimIPC[2].ipcAddress = "1"
**.TOR3.ShimIPC[0].difName = "Shim1To3"
**.TOR3.ShimIPC[0].ipcAddress = "3"

**.AS2.DCIPC.difName = "DCDIF"
**.AS2.DCIPC.ipcAddress = "2"
**.AS2.ShimIPC[1].difName = "Shim2To4"
**.AS2.ShimIPC[1].ipcAddress = "2"
**.TOR4.ShimIPC[0].difName = "Shim2To4"
**.TOR4.ShimIPC[0].ipcAddress = "4"

**.TOR3.DCIPC.difName = "DCDIF"
**.TOR3.DCIPC.ipcAddress = "3"
**.TOR3.ShimIPC[1].difName = "Shim3To5"
**.TOR3.ShimIPC[1].ipcAddress = "3"
**.SRV5.ShimIPC.difName = "Shim3To5"
**.SRV5.ShimIPC.ipcAddress = "5"

**.TOR4.DCIPC.difName = "DCDIF"
**.TOR4.DCIPC.ipcAddress = "4"
**.TOR4.ShimIPC[1].difName = "Shim4To6"
**.TOR4.ShimIPC[1].ipcAddress = "4"
**.SRV6.ShimIPC.difName = "Shim4To6"
**.SRV6.ShimIPC.ipcAddress = "6"

**.SRV5.TenantIPC.difName = "TenantDIF"
**.SRV5.TenantIPC.ipcAddress = "5"
**.SRV5.DCIPC.difName = "DCDIF"
**.SRV5.DCIPC.ipcAddress = "5"
**.VM7.AP.apName = "App0VM7"
**.VM7.TenantIPC.difName = "TenantDIF"
**.VM7.TenantIPC.ipcAddress = "7"
**.VM7.ShimIPC.difName = "Shim5To7"
**.VM7.ShimIPC.ipcAddress = "7"
**.SRV5.VMShimIPC[0].difName = "Shim5To7"
**.SRV5.VMShimIPC[0].ipcAddress = "5"

**.SRV6.TenantIPC.difName = "TenantDIF"
**.SRV6.TenantIPC.ipcAddress = "6"
**.SRV6.DCIPC.difName = "DCDIF"
**.SRV6.DCIPC.ipcAddress = "6"
**.VM8.AP.apName = "App0VM8"
**.VM8.TenantIPC.difName = "TenantDIF"
**.VM8.TenantIPC.ipcAddress = "8"
**.VM8.ShimIPC.difName = "Shim6To8"
**.VM8.ShimIPC.ipcAddress = "8"
**.SRV6.VMShimIPC[0].difName = "Shim6To8"
**.SRV6.VMShimIPC[0].ipcAddress = "6"

#
# Dif allocator configurations
#
**.CR*.difAllocator.configData = xmldoc("config.xml", "Configuration/Node[@id='all']/DA")
**.CR*.difAllocator.directory.configData = xmldoc("config.xml", "Configuration/Node[@id='all']/DA")
**.AS*.difAllocator.configData = xmldoc("config.xml", "Configuration/Node[@id='all']/DA")
**.AS*.difAllocator.directory.configData = xmldoc("config.xml", "Configuration/Node[@id='all']/DA")
**.TOR*.difAllocator.configData = xmldoc("config.xml", "Configuration/Node[@id='all']/DA")
**.TOR*.difAllocator.directory.configData = xmldoc("config.xml", "Configuration/Node[@id='all']/DA")
**.SRV*.difAllocator.configData = xmldoc("config.xml", "Configuration/Node[@id='all']/DA")
**.SRV*.difAllocator.directory.configData = xmldoc("config.xml", "Configuration/Node[@id='all']/DA")
**.VM*.difAllocator.configData = xmldoc("config.xml", "Configuration/Node[@id='all']/DA")
**.VM*.difAllocator.directory.configData = xmldoc("config.xml", "Configuration/Node[@id='all']/DA")
**.ra.qoscubesData = xmldoc("config.xml", "Configuration/QoSCubesSet")

# flows to allocate at the beginning
**.ra.preallocation = \
    xmldoc("config.xml", "Configuration/ConnectionSets/ConnectionSet[@id='all']/")