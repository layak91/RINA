[General]
network = AllNodes
seed-set = ${runnumber}
sim-time-limit = 5min

#Host AP config
**.HostA1.applicationProcess1.apName = "AppA1"
**.HostA2.applicationProcess1.apName = "AppA2"
**.HostB1.applicationProcess1.apName = "AppB1"
**.HostB2.applicationProcess1.apName = "AppB2"
**.applicationEntity.aeType = "AEPing"
**.iae.aeName = "Ping"

#Static DIF naming 
**.Host*.ipcProcess1.difName 		= "LayerX"
**.BorderRouter*.relayIpc.difName 	= "LayerX"

**.HostA1.ipcProcess0.difName 			= "LayerA1"
**.BorderRouterA.ipcProcess1.difName 	= "LayerA1"
**.HostA2.ipcProcess0.difName 			= "LayerA2"
**.BorderRouterA.ipcProcess2.difName 	= "LayerA2"

**.HostB1.ipcProcess0.difName 			= "LayerB1"
**.BorderRouterB.ipcProcess1.difName 	= "LayerB1"
**.HostB2.ipcProcess0.difName 			= "LayerB2"
**.BorderRouterB.ipcProcess2.difName 	= "LayerB2"

**.BorderRouterA.ipcProcess3.difName 	= "LayerAB"
**.InteriorRouter.relayIpc.difName 		= "LayerAB" 
**.BorderRouterB.ipcProcess3.difName 	= "LayerAB" 

**.BorderRouterA.bottomIpc.difName 		= "LayerYA"
**.InteriorRouter.ipcProcess[0].difName 	= "LayerYA"
**.BorderRouterB.bottomIpc.difName 		= "LayerYB"
**.InteriorRouter.ipcProcess[1].difName 	= "LayerYB"

#Static IPC Addressing
**.HostA1.ipcProcess1.ipcAddress 		= "A1"
**.HostA2.ipcProcess1.ipcAddress 		= "A2"
**.HostB1.ipcProcess1.ipcAddress 		= "B1"
**.HostB2.ipcProcess1.ipcAddress 		= "B2"
**.BorderRouterA.relayIpc.ipcAddress 	= "BRA"
**.BorderRouterB.relayIpc.ipcAddress 	= "BRB"

**.HostA1.ipcProcess0.ipcAddress 		= "a1"
**.BorderRouterA.ipcProcess1.ipcAddress	= "bra1"
**.HostA2.ipcProcess0.ipcAddress 		= "a2"
**.BorderRouterA.ipcProcess2.ipcAddress	= "bra2"  

**.HostB1.ipcProcess0.ipcAddress 		= "b1"
**.BorderRouterB.ipcProcess1.ipcAddress	= "brb1"
**.HostB2.ipcProcess0.ipcAddress 		= "b2"
**.BorderRouterB.ipcProcess2.ipcAddress	= "brb2"

**.BorderRouterA.ipcProcess3.ipcAddress	= "A"
**.InteriorRouter.relayIpc.ipcAddress	= "Z"
**.BorderRouterB.ipcProcess3.ipcAddress	= "B"

**.BorderRouterA.bottomIpc.ipcAddress 		= "ya"
**.InteriorRouter.ipcProcess[0].ipcAddress 	= "yza"
**.BorderRouterB.bottomIpc.ipcAddress 		= "yb"
**.InteriorRouter.ipcProcess[1].ipcAddress 	= "yzb"

#DIF Allocator settings
**.HostA1.difAllocator.configData = xmldoc("config.xml", "Configuration/Host[@id='HostA12']/DA")
**.HostA2.difAllocator.configData = xmldoc("config.xml", "Configuration/Host[@id='HostA12']/DA")
**.HostB1.difAllocator.configData = xmldoc("config.xml", "Configuration/Host[@id='HostB12']/DA")
**.HostB2.difAllocator.configData = xmldoc("config.xml", "Configuration/Host[@id='HostB12']/DA")

**.BorderRouterA.difAllocator.configData = xmldoc("config.xml", "Configuration/Router[@id='BorderRouterA']/DA")
**.BorderRouterB.difAllocator.configData = xmldoc("config.xml", "Configuration/Router[@id='BorderRouterB']/DA")
**.InteriorRouter.difAllocator.configData = xmldoc("config.xml", "Configuration/Router[@id='InteriorRouter']/DA")

#Directory settings
**.HostA1.difAllocator.directory.configData = xmldoc("config.xml", "Configuration/Host[@id='HostA12']/DA")
**.HostA2.difAllocator.directory.configData = xmldoc("config.xml", "Configuration/Host[@id='HostA12']/DA")
**.HostB1.difAllocator.directory.configData = xmldoc("config.xml", "Configuration/Host[@id='HostA12']/DA")
**.HostB2.difAllocator.directory.configData = xmldoc("config.xml", "Configuration/Host[@id='HostA12']/DA")

**.BorderRouterA.difAllocator.directory.configData = xmldoc("config.xml", "Configuration/Host[@id='HostA12']/DA")
**.BorderRouterB.difAllocator.directory.configData = xmldoc("config.xml", "Configuration/Host[@id='HostA12']/DA")
**.InteriorRouter.difAllocator.directory.configData = xmldoc("config.xml", "Configuration/Host[@id='HostA12']/DA")

#Enrollment settings
**.InteriorRouter.**.enrollment.isSelfEnrolled = true
**.BorderRouterA.relayIpc.**.enrollment.isSelfEnrolled = true
**.BorderRouterA.ipcProcess1.**.enrollment.isSelfEnrolled = true
**.BorderRouterB.ipcProcess1.**.enrollment.isSelfEnrolled = true
**.BorderRouterA.ipcProcess3.enrollment.configData = xmldoc("config.xml", "Configuration/Router[@id='BorderRouterA']/Enrollment[@id='ipcProcess2']")
**.BorderRouterB.relayIpc.enrollment.configData = xmldoc("config.xml", "Configuration/Router[@id='BorderRouterB']/Enrollment[@id='relayIpc']")
**.HostB1.ipcProcess1.enrollment.configData = xmldoc("config.xml", "Configuration/Host[@id='HostB12']/Enrollment")


#QoSCube setup
**.ra.qoscubesData = xmldoc("config.xml", "Configuration/QoSCubesSet")

# Preallocated flows
**.ra.preallocation = \
    xmldoc("config.xml", "Configuration/ConnectionSets/ConnectionSet[@id='all']/")

**.printAtEnd = true

[Config Ping]
fingerprint = "d5be-6971"
#PingApp setup
**.HostA1.applicationProcess1.applicationEntity.iae.dstApName = "AppB1"
**.HostA1.applicationProcess1.applicationEntity.iae.dstAeName = "Ping"
**.HostA1.applicationProcess1.applicationEntity.iae.startAt = 10s
**.HostA1.applicationProcess1.applicationEntity.iae.pingAt =  15s
**.HostA1.applicationProcess1.applicationEntity.iae.rate = 5
**.HostA1.applicationProcess1.applicationEntity.iae.stopAt = 30s
**.BorderRouterA.bottomIpc.efcp.efcp.pduDroppingEnabled = false
**.applicationProcess1.applicationEntity.iae.forceOrder = true

[Config PingWithDrop]
fingerprint = "08b2-1d18"
#PingApp setup
**.HostA1.applicationProcess1.applicationEntity.iae.dstApName = "AppB1"
**.HostA1.applicationProcess1.applicationEntity.iae.dstAeName = "Ping"
**.HostA1.applicationProcess1.applicationEntity.iae.startAt = 10s
**.HostA1.applicationProcess1.applicationEntity.iae.pingAt =  15s
**.HostA1.applicationProcess1.applicationEntity.iae.rate = 10
**.HostA1.applicationProcess1.applicationEntity.iae.stopAt = 50s
**.HostA1.ipcProcess1.efcp.efcp.pduDroppingEnabled = true
#**.BorderRouterA.bottomIpc.efcp.efcp.pduDroppingEnabled = true
**.applicationProcess1.applicationEntity.iae.forceOrder = true
